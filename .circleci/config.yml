version: 2.1

orbs:
  node: circleci/node@5.1.0
  aws-cli: circleci/aws-cli@3.1.5

commands:
  install_node_modules:
    description: 'Install node modules'
    steps:
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            sudo corepack enable
            sudo corepack prepare pnpm@latest-8 --activate
      - run:
          name: Install Dependencies
          command: |
            pnpm install --no-frozen-lockfile
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules

jobs:
  build:
    executor:
      name: node/default
      tag: '16.18.0'
    steps:
      - checkout
      - install_node_modules
      - run:
          name: Lint and Test
          command: pnpm lint-staged --relative

  deploy:
    executor:
      name: node/default
      tag: '16.18.0'
    steps:
      - checkout
      - install_node_modules
      - aws-cli/setup
      - run:
          name: 'Install aws-amplify CLI'
          command: |
            sudo npm install -g @aws-amplify/cli --unsafe-perm=true
      - run:
          name: 'Show AWS CLI and Amplify Versions'
          command: |
            aws --version
            amplify --version
      - run:
          name: 'Checkout Amplify'
          command: |
            amplify init --amplify "{\"envName\":\"$VITE_NODE_ENV\"}" --providers "{\"awscloudformation\":{\"useProfile\":true,\"profileName\":\"default\"}}" --yes
      - run:
          name: Deploy
          command: |
            amplify publish --invalidateCloudFront --codegen "{\"generateCode\":false}" --yes

workflows:
  deploy-staging:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
          context: xfactor-staging

  deploy-uat:
    jobs:
      - build:
          filters:
            branches:
              only:
                - uat
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - uat
          context: xfactor-uat

  deploy-sit:
    jobs:
      - build:
          filters:
            branches:
              only:
                - sit
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - sit
          context: xfactor-sit

  deploy-release:
    jobs:
      - build:
          filters:
            branches:
              only:
                - release
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - release
          context: xfactor-release
